{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/PersonLink/PersonLink.tsx","utills/constants.ts","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","utills/getParentsFuncts.ts","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","HomePage","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","useParams","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","personInfo","find","getPersonFather","catch","finally","isNoPeople","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.484fafd6.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { FEMALE_SEX } from '../../utills/constants';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === FEMALE_SEX,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export const FEMALE_SEX = 'f';\nexport const MALE_SEX = 'm';\nexport const DEFAULT_VALUE = '-';\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { DEFAULT_VALUE } from '../../utills/constants';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => (\n              <tr\n                data-cy=\"person\"\n                className={classNames({\n                  'has-background-warning': person.slug === personSlug,\n                })}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  {person.mother\n                    ? <PersonLink person={person.mother} />\n                    : person.motherName || DEFAULT_VALUE}\n                </td>\n                <td>\n                  {person.father\n                    ? <PersonLink person={person.father} />\n                    : person.fatherName || DEFAULT_VALUE}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { getPersonFather, getPersonMother } from '../utills/getParentsFuncts';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer.map(personInfo => {\n          const father = getPersonFather(peopleFromServer, personInfo);\n          const mother = getPersonMother(peopleFromServer, personInfo);\n          const currentPerson = { ...personInfo, father, mother };\n\n          return currentPerson;\n        }));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isNoPeople = !people.length && !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading\n        ? <Loader />\n        : <PeopleTable people={people} />}\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n      {isNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { FEMALE_SEX, MALE_SEX } from './constants';\n\nexport function getPersonFather(people: Person[], person: Person) {\n  return people.find(({ sex, name }: Person) => sex === MALE_SEX\n    && name === person.fatherName);\n}\n\nexport function getPersonMother(persons: Person[], person: Person) {\n  return persons.find(({ sex, name }: Person) => sex === FEMALE_SEX\n    && name === person.motherName);\n}\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people/:personSlug?\">\n          <Route index element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}