{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","utills/constants.ts","types/personSex.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","utills/getParentsFuncts.ts","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","HomePage","columnNames","Sex","PersonLink","person","slug","sex","name","PersonItem","personSlug","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","find","getParents","catch","finally","isNoPeople","length","isErrorMessage","isDisplayPeople","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3de19dae.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const DEFAULT_VALUE = '-';\nexport const columnNames = [\n  'Name', 'Sex', 'Born', 'Died', 'Mother', 'Father',\n];\n","export const Sex = {\n  FEMALE: 'f',\n  MALE: 'm',\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Sex } from '../../types/personSex';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === Sex.FEMALE,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { DEFAULT_VALUE } from '../../utills/constants';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const {\n    sex,\n    slug,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || DEFAULT_VALUE}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || DEFAULT_VALUE}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { columnNames } from '../../utills/constants';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              {columnNames.map(name => (\n                <th key={name}>\n                  {name}\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => (\n              <PersonItem person={person} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { getParents } from '../utills/getParentsFuncts';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => (\n        setPeople(getParents(peopleFromServer))\n      ))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isNoPeople = !people.length && !isLoading && !isError;\n  const isErrorMessage = isError && !isLoading;\n  const isDisplayPeople = !!people.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {isErrorMessage && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {isNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {isDisplayPeople && (\n        <PeopleTable people={people} />\n      )}\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getParents = (people: Person[]) => {\n  return people.map(person => {\n    const father = people.find(({ name }) => person.fatherName === name);\n    const mother = people.find(({ name }) => person.motherName === name);\n\n    return ({\n      ...person,\n      father,\n      mother,\n    });\n  });\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}